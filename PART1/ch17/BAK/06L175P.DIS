Module: D:\CH17\L175PRO.CPP
GROUP: 'DGROUP' CONST,CONST2,_DATA,_BSS

Segment: _TEXT BYTE USE32 000003AD bytes
0000                          main_:
0000    53                        push        ebx 
0001    51                        push        ecx 
0002    52                        push        edx 
0003    83 EC 68                  sub         esp,0x00000068 
0006    8D 44 24 50               lea         eax,0x50[esp] 
000A    8B 1D 00 00 00 00         mov         ebx,dword ptr int unsigned near cellmap_width 
0010    8B 15 00 00 00 00         mov         edx,dword ptr int unsigned near cellmap_height 
0016    E8 00 00 00 00            call        near cellmap::cellmap( int unsigned, int unsigned ) 
001B    8D 44 24 50               lea         eax,0x50[esp] 
001F    BB 00 00 00 00            mov         ebx,offset L$32 
0024    BA 0C 00 00 00            mov         edx,0x0000000c 
0029    E8 00 00 00 00            call        void near cellmap::init() 
002E    E8 00 00 00 00            call        void near enter_display_mode() 
0033    31 C0                     xor         eax,eax 
0035    E8 00 00 00 00            call        void near show_text( int, int, char near * ) 
003A    8D 54 24 64               lea         edx,0x64[esp] 
003E    31 C0                     xor         eax,eax 
0040    31 C9                     xor         ecx,ecx 
0042    E8 00 00 00 00            call        _bios_timeofday_ 
0047                          L$1:
0047    41                        inc         ecx 
0048    51                        push        ecx 
0049    68 0D 00 00 00            push        offset L$33 
004E    8D 44 24 08               lea         eax,0x8[esp] 
0052    50                        push        eax 
0053    8D 5C 24 0C               lea         ebx,0xc[esp] 
0057    E8 00 00 00 00            call        sprintf_ 
005C    83 C4 0C                  add         esp,0x0000000c 
005F    BA 0D 00 00 00            mov         edx,0x0000000d 
0064    B8 01 00 00 00            mov         eax,0x00000001 
0069    E8 00 00 00 00            call        void near show_text( int, int, char near * ) 
006E    8D 44 24 50               lea         eax,0x50[esp] 
0072    E8 00 00 00 00            call        void near cellmap::next_generation() 
0077    E8 00 00 00 00            call        kbhit_ 
007C    85 C0                     test        eax,eax 
007E    74 C7                     je          L$1 
0080    E8 00 00 00 00            call        getch_ 
0085    E8 00 00 00 00            call        void near exit_display_mode() 
008A    BA 1D 00 00 00            mov         edx,offset L$36 
008F    B8 00 00 00 00            mov         eax,offset std::ostream near std::cout 
0094    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( char const near * ) 
0099    89 CA                     mov         edx,ecx 
009B    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( long unsigned ) 
00A0    BA 15 00 00 00            mov         edx,offset L$35 
00A5    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( char const near * ) 
00AA    8B 15 00 00 00 00         mov         edx,dword ptr int unsigned near seed 
00B0    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( long unsigned ) 
00B5    BA 13 00 00 00            mov         edx,offset L$34 
00BA    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( char const near * ) 
00BF    8D 44 24 50               lea         eax,0x50[esp] 
00C3    31 D2                     xor         edx,edx 
00C5    E8 00 00 00 00            call        near cellmap::~cellmap() 
00CA    31 C0                     xor         eax,eax 
00CC    83 C4 68                  add         esp,0x00000068 
00CF    5A                        pop         edx 
00D0    59                        pop         ecx 
00D1    5B                        pop         ebx 
00D2    C3                        ret         

Routine Size: 211 bytes,    Routine Base: _TEXT + 0000

00D3                          near cellmap::cellmap( int unsigned, int unsigned ):
00D3    51                        push        ecx 
00D4    89 C1                     mov         ecx,eax 
00D6    89 58 08                  mov         dword ptr 0x8[eax],ebx 
00D9    0F AF DA                  imul        ebx,edx 
00DC    89 50 0C                  mov         dword ptr 0xc[eax],edx 
00DF    89 58 10                  mov         dword ptr 0x10[eax],ebx 
00E2    89 D8                     mov         eax,ebx 
00E4    E8 00 00 00 00            call        void near * near operator new []( int unsigned ) 
00E9    89 01                     mov         dword ptr [ecx],eax 
00EB    8B 41 10                  mov         eax,dword ptr 0x10[ecx] 
00EE    E8 00 00 00 00            call        void near * near operator new []( int unsigned ) 
00F3    89 41 04                  mov         dword ptr 0x4[ecx],eax 
00F6    83 39 00                  cmp         dword ptr [ecx],0x00000000 
00F9    74 14                     je          L$3 
00FB    85 C0                     test        eax,eax 
00FD    74 10                     je          L$3 
00FF                          L$2:
00FF    8B 59 10                  mov         ebx,dword ptr 0x10[ecx] 
0102    8B 01                     mov         eax,dword ptr [ecx] 
0104    31 D2                     xor         edx,edx 
0106    E8 00 00 00 00            call        memset_ 
010B    89 C8                     mov         eax,ecx 
010D    59                        pop         ecx 
010E    C3                        ret         
010F                          L$3:
010F    68 31 00 00 00            push        offset L$37 
0114    E8 00 00 00 00            call        printf_ 
0119    83 C4 04                  add         esp,0x00000004 
011C    B8 01 00 00 00            mov         eax,0x00000001 
0121    E8 00 00 00 00            call        exit_ 
0126    EB D7                     jmp         L$2 

Routine Size: 85 bytes,    Routine Base: _TEXT + 00D3

0128                          near cellmap::~cellmap():
0128    51                        push        ecx 
0129    89 C1                     mov         ecx,eax 
012B    8B 00                     mov         eax,dword ptr [eax] 
012D    E8 00 00 00 00            call        void near operator delete []( void near * ) 
0132    8B 41 04                  mov         eax,dword ptr 0x4[ecx] 
0135    E8 00 00 00 00            call        void near operator delete []( void near * ) 
013A    89 C8                     mov         eax,ecx 
013C    59                        pop         ecx 
013D    C3                        ret         

Routine Size: 22 bytes,    Routine Base: _TEXT + 0128

013E                          void near cellmap::set_cell( int unsigned, int unsigned ):
013E    51                        push        ecx 
013F    56                        push        esi 
0140    57                        push        edi 
0141    55                        push        ebp 
0142    83 EC 08                  sub         esp,0x00000008 
0145    89 D7                     mov         edi,edx 
0147    89 DD                     mov         ebp,ebx 
0149    8B 50 0C                  mov         edx,dword ptr 0xc[eax] 
014C    8B 48 08                  mov         ecx,dword ptr 0x8[eax] 
014F    89 14 24                  mov         dword ptr [esp],edx 
0152    89 DA                     mov         edx,ebx 
0154    0F AF D1                  imul        edx,ecx 
0157    8B 18                     mov         ebx,dword ptr [eax] 
0159    01 DA                     add         edx,ebx 
015B    01 FA                     add         edx,edi 
015D    85 FF                     test        edi,edi 
015F    75 61                     jne         L$9 
0161    8D 71 FF                  lea         esi,-0x1[ecx] 
0164                          L$4:
0164    85 ED                     test        ebp,ebp 
0166    75 61                     jne         L$10 
0168    8B 58 10                  mov         ebx,dword ptr 0x10[eax] 
016B    29 CB                     sub         ebx,ecx 
016D                          L$5:
016D    89 5C 24 04               mov         dword ptr 0x4[esp],ebx 
0171    8D 59 FF                  lea         ebx,-0x1[ecx] 
0174    39 DF                     cmp         edi,ebx 
0176    75 5B                     jne         L$11 
0178    F7 DB                     neg         ebx 
017A                          L$6:
017A    8B 3C 24                  mov         edi,dword ptr [esp] 
017D    4F                        dec         edi 
017E    39 FD                     cmp         ebp,edi 
0180    75 58                     jne         L$12 
0182    8B 78 10                  mov         edi,dword ptr 0x10[eax] 
0185    29 CF                     sub         edi,ecx 
0187    F7 DF                     neg         edi 
0189                          L$7:
0189    8B 44 24 04               mov         eax,dword ptr 0x4[esp] 
018D    01 D0                     add         eax,edx 
018F    8D 0C 30                  lea         ecx,[eax+esi] 
0192    80 0A 01                  or          byte ptr [edx],0x01 
0195    80 01 02                  add         byte ptr [ecx],0x02 
0198    80 00 02                  add         byte ptr [eax],0x02 
019B    80 04 03 02               add         byte ptr [ebx+eax],0x02 
019F    8D 04 32                  lea         eax,[edx+esi] 
01A2    80 00 02                  add         byte ptr [eax],0x02 
01A5    8D 04 1A                  lea         eax,[edx+ebx] 
01A8    01 FA                     add         edx,edi 
01AA    80 00 02                  add         byte ptr [eax],0x02 
01AD    8D 04 32                  lea         eax,[edx+esi] 
01B0    80 00 02                  add         byte ptr [eax],0x02 
01B3    80 02 02                  add         byte ptr [edx],0x02 
01B6    80 04 1A 02               add         byte ptr [edx+ebx],0x02 
01BA                          L$8:
01BA    83 C4 08                  add         esp,0x00000008 
01BD    5D                        pop         ebp 
01BE    5F                        pop         edi 
01BF    5E                        pop         esi 
01C0    59                        pop         ecx 
01C1    C3                        ret         
01C2                          L$9:
01C2    BE FF FF FF FF            mov         esi,0xffffffff 
01C7    EB 9B                     jmp         L$4 
01C9                          L$10:
01C9    89 CB                     mov         ebx,ecx 
01CB    89 4C 24 04               mov         dword ptr 0x4[esp],ecx 
01CF    F7 DB                     neg         ebx 
01D1    EB 9A                     jmp         L$5 
01D3                          L$11:
01D3    BB 01 00 00 00            mov         ebx,0x00000001 
01D8    EB A0                     jmp         L$6 
01DA                          L$12:
01DA    89 CF                     mov         edi,ecx 
01DC    EB AB                     jmp         L$7 

Routine Size: 160 bytes,    Routine Base: _TEXT + 013E

01DE                          void near cellmap::clear_cell( int unsigned, int unsigned ):
01DE    51                        push        ecx 
01DF    56                        push        esi 
01E0    57                        push        edi 
01E1    55                        push        ebp 
01E2    83 EC 08                  sub         esp,0x00000008 
01E5    89 D7                     mov         edi,edx 
01E7    89 DD                     mov         ebp,ebx 
01E9    8B 50 0C                  mov         edx,dword ptr 0xc[eax] 
01EC    8B 48 08                  mov         ecx,dword ptr 0x8[eax] 
01EF    89 14 24                  mov         dword ptr [esp],edx 
01F2    89 DA                     mov         edx,ebx 
01F4    0F AF D1                  imul        edx,ecx 
01F7    8B 18                     mov         ebx,dword ptr [eax] 
01F9    01 DA                     add         edx,ebx 
01FB    01 FA                     add         edx,edi 
01FD    85 FF                     test        edi,edi 
01FF    75 5E                     jne         L$17 
0201    8D 71 FF                  lea         esi,-0x1[ecx] 
0204                          L$13:
0204    85 ED                     test        ebp,ebp 
0206    75 5E                     jne         L$18 
0208    8B 58 10                  mov         ebx,dword ptr 0x10[eax] 
020B    29 CB                     sub         ebx,ecx 
020D                          L$14:
020D    89 5C 24 04               mov         dword ptr 0x4[esp],ebx 
0211    8D 59 FF                  lea         ebx,-0x1[ecx] 
0214    39 DF                     cmp         edi,ebx 
0216    75 58                     jne         L$19 
0218    F7 DB                     neg         ebx 
021A                          L$15:
021A    8B 3C 24                  mov         edi,dword ptr [esp] 
021D    4F                        dec         edi 
021E    39 FD                     cmp         ebp,edi 
0220    75 55                     jne         L$20 
0222    8B 78 10                  mov         edi,dword ptr 0x10[eax] 
0225    29 CF                     sub         edi,ecx 
0227    F7 DF                     neg         edi 
0229                          L$16:
0229    8B 44 24 04               mov         eax,dword ptr 0x4[esp] 
022D    01 D0                     add         eax,edx 
022F    8D 0C 30                  lea         ecx,[eax+esi] 
0232    80 22 FE                  and         byte ptr [edx],0xfe 
0235    80 29 02                  sub         byte ptr [ecx],0x02 
0238    80 28 02                  sub         byte ptr [eax],0x02 
023B    80 2C 03 02               sub         byte ptr [ebx+eax],0x02 
023F    8D 04 32                  lea         eax,[edx+esi] 
0242    80 28 02                  sub         byte ptr [eax],0x02 
0245    8D 04 1A                  lea         eax,[edx+ebx] 
0248    01 FA                     add         edx,edi 
024A    80 28 02                  sub         byte ptr [eax],0x02 
024D    8D 04 32                  lea         eax,[edx+esi] 
0250    80 28 02                  sub         byte ptr [eax],0x02 
0253    80 2A 02                  sub         byte ptr [edx],0x02 
0256    80 2C 1A 02               sub         byte ptr [edx+ebx],0x02 
025A    E9 5B FF FF FF            jmp         L$8 
025F                          L$17:
025F    BE FF FF FF FF            mov         esi,0xffffffff 
0264    EB 9E                     jmp         L$13 
0266                          L$18:
0266    89 CB                     mov         ebx,ecx 
0268    89 4C 24 04               mov         dword ptr 0x4[esp],ecx 
026C    F7 DB                     neg         ebx 
026E    EB 9D                     jmp         L$14 
0270                          L$19:
0270    BB 01 00 00 00            mov         ebx,0x00000001 
0275    EB A3                     jmp         L$15 
0277                          L$20:
0277    89 CF                     mov         edi,ecx 
0279    EB AE                     jmp         L$16 

Routine Size: 157 bytes,    Routine Base: _TEXT + 01DE

027B                          int near cellmap::cell_state( int, int ):
027B    0F AF 58 08               imul        ebx,dword ptr 0x8[eax] 
027F    8B 00                     mov         eax,dword ptr [eax] 
0281    01 D8                     add         eax,ebx 
0283    8A 04 02                  mov         al,byte ptr [edx+eax] 
0286    24 01                     and         al,0x01 
0288    0F B6 C0                  movzx       eax,al 
028B    C3                        ret         

Routine Size: 17 bytes,    Routine Base: _TEXT + 027B

028C                          void near cellmap::next_generation():
028C    53                        push        ebx 
028D    51                        push        ecx 
028E    52                        push        edx 
028F    56                        push        esi 
0290    57                        push        edi 
0291    55                        push        ebp 
0292    83 EC 08                  sub         esp,0x00000008 
0295    89 C5                     mov         ebp,eax 
0297    8B 40 0C                  mov         eax,dword ptr 0xc[eax] 
029A    8B 4D 10                  mov         ecx,dword ptr 0x10[ebp] 
029D    8B 75 00                  mov         esi,dword ptr [ebp] 
02A0    89 44 24 04               mov         dword ptr 0x4[esp],eax 
02A4    8B 45 08                  mov         eax,dword ptr 0x8[ebp] 
02A7    8B 7D 04                  mov         edi,dword ptr 0x4[ebp] 
02AA    89 04 24                  mov         dword ptr [esp],eax 
02AD    57                        push        edi 
02AE    8B C1                     mov         eax,ecx 
02B0    C1 E9 02                  shr         ecx,0x02 
02B3    F3 A5                     rep movsd   
02B5    8A C8                     mov         cl,al 
02B7    80 E1 03                  and         cl,0x03 
02BA    F3 A4                     rep movsb   
02BC    5F                        pop         edi 
02BD    8B 75 04                  mov         esi,dword ptr 0x4[ebp] 
02C0    31 FF                     xor         edi,edi 
02C2                          L$21:
02C2    3B 7C 24 04               cmp         edi,dword ptr 0x4[esp] 
02C6    73 56                     jae         L$26 
02C8    31 C9                     xor         ecx,ecx 
02CA                          L$22:
02CA    8A 06                     mov         al,byte ptr [esi] 
02CC    84 C0                     test        al,al 
02CE    74 2D                     je          L$24 
02D0    0F B6 C0                  movzx       eax,al 
02D3    D1 F8                     sar         eax,0x01 
02D5    F6 06 01                  test        byte ptr [esi],0x01 
02D8    74 2D                     je          L$25 
02DA    83 F8 02                  cmp         eax,0x00000002 
02DD    74 1E                     je          L$24 
02DF    83 F8 03                  cmp         eax,0x00000003 
02E2    74 19                     je          L$24 
02E4    89 FB                     mov         ebx,edi 
02E6    89 CA                     mov         edx,ecx 
02E8    89 E8                     mov         eax,ebp 
02EA    E8 00 00 00 00            call        void near cellmap::clear_cell( int unsigned, int unsigned ) 
02EF    BB 01 00 00 00            mov         ebx,0x00000001 
02F4                          L$23:
02F4    89 FA                     mov         edx,edi 
02F6    89 C8                     mov         eax,ecx 
02F8    E8 00 00 00 00            call        void near draw_pixel( int unsigned, int unsigned, int unsigned ) 
02FD                          L$24:
02FD    41                        inc         ecx 
02FE    46                        inc         esi 
02FF    3B 0C 24                  cmp         ecx,dword ptr [esp] 
0302    72 C6                     jb          L$22 
0304    47                        inc         edi 
0305    EB BB                     jmp         L$21 
0307                          L$25:
0307    83 F8 03                  cmp         eax,0x00000003 
030A    75 F1                     jne         L$24 
030C    89 FB                     mov         ebx,edi 
030E    89 CA                     mov         edx,ecx 
0310    89 E8                     mov         eax,ebp 
0312    E8 00 00 00 00            call        void near cellmap::set_cell( int unsigned, int unsigned ) 
0317    BB 0E 00 00 00            mov         ebx,0x0000000e 
031C    EB D6                     jmp         L$23 
031E                          L$26:
031E    83 C4 08                  add         esp,0x00000008 
0321                          L$27:
0321    5D                        pop         ebp 
0322    5F                        pop         edi 
0323    5E                        pop         esi 
0324    5A                        pop         edx 
0325    59                        pop         ecx 
0326    5B                        pop         ebx 
0327    C3                        ret         

Routine Size: 156 bytes,    Routine Base: _TEXT + 028C

0328                          void near cellmap::init():
0328    53                        push        ebx 
0329    51                        push        ecx 
032A    52                        push        edx 
032B    56                        push        esi 
032C    57                        push        edi 
032D    55                        push        ebp 
032E    89 C1                     mov         ecx,eax 
0330    BA 40 00 00 00            mov         edx,offset L$38 
0335    B8 00 00 00 00            mov         eax,offset std::ostream near std::cout 
033A    E8 00 00 00 00            call        std::ostream near & near std::ostream::operator <<( char const near * ) 
033F    BA 00 00 00 00            mov         edx,offset int unsigned near seed 
0344    B8 00 00 00 00            mov         eax,offset std::istream near std::cin 
0349    E8 00 00 00 00            call        std::istream near & near std::istream::operator >>( int unsigned near & ) 
034E    A1 00 00 00 00            mov         eax,dword ptr int unsigned near seed 
0353    85 C0                     test        eax,eax 
0355    74 4A                     je          L$31 
0357                          L$28:
0357    A1 00 00 00 00            mov         eax,dword ptr int unsigned near seed 
035C    E8 00 00 00 00            call        srand_ 
0361    8B 69 0C                  mov         ebp,dword ptr 0xc[ecx] 
0364    0F AF 69 08               imul        ebp,dword ptr 0x8[ecx] 
0368    D1 ED                     shr         ebp,0x01 
036A                          L$29:
036A    31 D2                     xor         edx,edx 
036C    E8 00 00 00 00            call        rand_ 
0371    F7 71 08                  div         dword ptr 0x8[ecx] 
0374    89 D7                     mov         edi,edx 
0376    31 D2                     xor         edx,edx 
0378    E8 00 00 00 00            call        rand_ 
037D    F7 71 0C                  div         dword ptr 0xc[ecx] 
0380    89 D6                     mov         esi,edx 
0382    89 D3                     mov         ebx,edx 
0384    89 C8                     mov         eax,ecx 
0386    89 FA                     mov         edx,edi 
0388    E8 00 00 00 00            call        int near cellmap::cell_state( int, int ) 
038D    85 C0                     test        eax,eax 
038F    75 0B                     jne         L$30 
0391    89 F3                     mov         ebx,esi 
0393    89 FA                     mov         edx,edi 
0395    89 C8                     mov         eax,ecx 
0397    E8 00 00 00 00            call        void near cellmap::set_cell( int unsigned, int unsigned ) 
039C                          L$30:
039C    4D                        dec         ebp 
039D    75 CB                     jne         L$29 
039F    EB 80                     jmp         L$27 
03A1                          L$31:
03A1    E8 00 00 00 00            call        time_ 
03A6    A3 00 00 00 00            mov         dword ptr int unsigned near seed,eax 
03AB    EB AA                     jmp         L$28 

Routine Size: 133 bytes,    Routine Base: _TEXT + 0328

No disassembly errors

Segment: CONST BYTE USE32 0000005B bytes
0000                          L$32:
0000    47 65 6E 65 72 61 74 69 6F 6E 3A 20 00          Generation: .
000D                          L$33:
000D    25 31 30 6C 75 00                               %10lu.
0013                          L$34:
0013    0A 00                                           ..
0015                          L$35:
0015    0A 53 65 65 64 3A 20 00                         .Seed: .
001D                          L$36:
001D    54 6F 74 61 6C 20 67 65 6E 65 72 61 74 69 6F 6E Total generation
002D    73 3A 20 00                                     s: .
0031                          L$37:
0031    4F 75 74 20 6F 66 20 6D 65 6D 6F 72 79 0A 00    Out of memory..
0040                          L$38:
0040    53 65 65 64 20 28 30 20 66 6F 72 20 72 61 6E 64 Seed (0 for rand
0050    6F 6D 20 73 65 65 64 29 3A 20 00                om seed): .

Segment: CONST2 PARA USE32 00000000 bytes

Segment: _DATA DWORD USE32 0000000C bytes
0000                          int unsigned near cellmap_width:
0000    60 00 00 00                                     `...
0004                          int unsigned near cellmap_height:
0004    60 00 00 00                                     `...
0008                          int unsigned near magnifier:
0008    02 00 00 00                                     ....

Segment: _BSS DWORD USE32 00000004 bytes
0000                          int unsigned near seed:

BSS Size: 4 bytes

Comdat: char unsigned const near __typesig[] SEGMENT ANY 'DGROUP:CONST2' 00000018 bytes
0000                          char unsigned const near __typesig[]:
0000    00 01 02 00 00 00 00 00                         ........
0008    00 00 00 00                                     DD	offset near cellmap::cellmap( cellmap const near & )
000C    00 00 00 00                                     DD	offset near cellmap::~cellmap()
0010    14 00 00 00                                     ....
0014    04 00 00 00                                     DD	offset char unsigned near __typeid[]+0x4

Comdat: char unsigned near __typeid[] SEGMENT ANY 'DGROUP:_DATA' 0000000F bytes
0000                          char unsigned near __typeid[]:
0000    00 00 00 00 24 63 65 6C 6C 6D 61 70 24 24 00    ....$cellmap$$.

